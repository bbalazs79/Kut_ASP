@{
    ViewData["Title"] = "Home Page";
}
@model List<Kutatas_core.Models.Food>
<div id="navigation">
    @{ Html.RenderPartial("~/Views/Shared/Navigation.cshtml"); }
</div>
<body class="container">
    <div class="ordered"><h2>Név</h2><h2>Darab</h2><h2>Ár</h2><h2>Összeg</h2></div>
    <ul class="orderedlist">
        <li class="cartlist">


        </li>
    </ul>
</body>


<script>
    
    //console.log(sessionStorage.getItem(cart.id));
    
    
    var cartContent = JSON.parse(sessionStorage.getItem(cart.id));
    console.log(cartContent);
    if (cartContent == null) {
         cartContent = [];
    }

    list();
    function list() {
    for (let j = 0; j < cartContent.length; j++) {

        document.querySelector('.cartlist').innerHTML += `
        <div class="orderedfoods">
        <div> <h2>${cartContent[j].name}</h2></div>
        <div><h2>${cartContent[j].count} db</h2></div>
        <div> <h2> ${cartContent[j].price} Ft </h2> </div>
        <div><h2> ${cartContent[j].count * cartContent[j].price} Ft </h2></div>
        <div>
        <div class="btn btn-info" onclick="subItem(this)" data-id="${(cartContent[j].id)}"><i class="fas fa-minus"></i></div>
        <div class="btn btn-succes" onclick="addItem(this)" data-id="${(cartContent[j].id)}"><i class="fas fa-plus"></i></div>
        <div class="btn btn-danger" onclick="deleteItem(this)" data-id="${(cartContent[j].id)}"><i class="fas fa-trash-alt"></i></div>
         </div>
        </div>`;

           
        }
    }
    function deleteLis() {
        var elemnts = document.querySelectorAll(".orderedfoods");
        for (var i = 0; i < elemnts.length; i++) {
            elemnts[i].remove();
        }
        
        /*  frissítjük az adatbázist */
        
    }

    function addItem(item) {
        
        for (var j = 0; j < cartContent.length; j++) {
            
            if (cartContent[j].id == item.dataset.id) {
                
                cartContent[j].count++;
                sessionStorage.setItem('cart', JSON.stringify(cartContent));
                deleteLis(item);
                list();
                

                    
            }
            
        }
        
        }

    

    function subItem(item) {
        for (let i = 0; i < cartContent.length; i++) {
            if (cartContent[i].id == item.dataset.id && cartContent[i].count > 1) {
                cartContent[i].count--;
                sessionStorage.setItem('cart', JSON.stringify(cartContent));
                for (var j = 0; j < cartContent.length; j++) {
                    if (cartContent[j].id == item.dataset.id) {
                        //reFresh(item, i);
                        deleteLis(item);
                        list();
                    }
                }
                //document.querySelector('.totalPrice').innerHTML = '$' + cartTotal();
            } else if (cartContent[i].id == item.dataset.id) {
                deleteItem(item);
            }
        }
    }

    function deleteItem(item) {
        for (let i = 0; i < cartContent.length; i++) {
            if (cartContent[i].id == item.dataset.id) {
                /* kliensoldalon  0zuk a változót */
                cartContent[i].count = 0;

                cartContent.splice(i, 1);
                /*  töröljük a DOM elemet   */
                deleteLis(item);
                /**/
                list();
                
                /*  frissítjük az adatbázist */
                sessionStorage.setItem('cart', JSON.stringify(cartContent));
                /*   DOM-ban lévő értékeket frissítjük (totalPrice-t)  */
                
               // document.querySelector('.totalPrice').innerHTML = '$' + cartTotal();
            }

        }
    }   
   
</script>

