{"version":3,"sources":["kendo.pager.js"],"names":["f","define","$","undefined","button","template","idx","text","numeric","title","ns","kendo","icon","className","wrapClassName","iconTemplate","substring","update","element","selector","page","disabled","find","parent","attr","toggleClass","first","FIRST","prev","PREV","Math","max","next","totalPages","NEXT","min","last","LAST","window","ui","Widget","proxy","SIZE","CHANGE","NS","CLICK","KEYDOWN","DISABLED","MOUSEDOWN","DOCUMENT_ELEMENT","document","documentElement","MAX_VALUE","Number","Pager","extend","init","options","pageSizes","pageItems","that","this","sizeClassName","fn","call","_createDataSource","linkTemplate","selectTemplate","currentPageTemplate","_refreshHandler","refresh","dataSource","bind","downEvent","applyEventMap","guid","previousNext","length","append","messages","previous","list","appendTo","wrap","input","format","of","on","_keydown","map","size","toLowerCase","allPages","itemsPerPage","html","join","end","val","pageSize","DropDownList","show","kendoDropDownList","_change","_refreshClick","info","_click","addClass","_toggleActive","autoBind","_resizeHandler","resize","_getWidthSizeClass","width","notify","destroy","off","unbind","events","name","buttonCount","display","empty","morePages","setDataSource","fetch","_resize","el","hasClass","removeClass","data","DataSource","create","e","reminder","hasAll","selectAll","start","collapsedTotal","_collapsedTotal","total","_hideList","action","endless","filter","keyCode","keys","ENTER","parseInt","isNaN","preventDefault","read","value","currentTarget","_pageSize","_take","_skip","target","eventTarget","contains","is","ceil","trigger","index","sizes","split","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.pager.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.pager', ['kendo.data'], f);\n}(function () {\n    var __meta__ = {\n        id: 'pager',\n        name: 'Pager',\n        category: 'framework',\n        depends: ['data'],\n        advanced: true\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, Widget = ui.Widget, proxy = $.proxy, FIRST = '.k-i-arrow-end-left', LAST = '.k-i-arrow-end-right', PREV = '.k-i-arrow-60-left', NEXT = '.k-i-arrow-60-right', SIZE = 'k-pager-lg k-pager-md k-pager-sm', CHANGE = 'change', NS = '.kendoPager', CLICK = 'click', KEYDOWN = 'keydown', DISABLED = 'disabled', MOUSEDOWN = 'down', DOCUMENT_ELEMENT = $(document.documentElement), MAX_VALUE = Number.MAX_VALUE, iconTemplate = kendo.template('<a href=\"\\\\#\" aria-label=\"#=text#\" title=\"#=text#\" class=\"k-link k-pager-nav #= wrapClassName #\"><span class=\"k-icon #= className #\"></span></a>');\n        function button(template, idx, text, numeric, title) {\n            return template({\n                idx: idx,\n                text: text,\n                ns: kendo.ns,\n                numeric: numeric,\n                title: title || ''\n            });\n        }\n        function icon(className, text, wrapClassName) {\n            return iconTemplate({\n                className: className.substring(1),\n                text: text,\n                wrapClassName: wrapClassName || ''\n            });\n        }\n        function update(element, selector, page, disabled) {\n            element.find(selector).parent().attr(kendo.attr('page'), page).attr('tabindex', -1).toggleClass('k-state-disabled', disabled);\n        }\n        function first(element, page) {\n            update(element, FIRST, 1, page <= 1);\n        }\n        function prev(element, page) {\n            update(element, PREV, Math.max(1, page - 1), page <= 1);\n        }\n        function next(element, page, totalPages) {\n            update(element, NEXT, Math.min(totalPages, page + 1), page >= totalPages);\n        }\n        function last(element, page, totalPages) {\n            update(element, LAST, totalPages, page >= totalPages);\n        }\n        var Pager = Widget.extend({\n            init: function (element, options) {\n                var that = this, page, totalPages;\n                var sizeClassName = null;\n                Widget.fn.init.call(that, element, options);\n                options = that.options;\n                that._createDataSource(options);\n                that.linkTemplate = kendo.template(that.options.linkTemplate);\n                that.selectTemplate = kendo.template(that.options.selectTemplate);\n                that.currentPageTemplate = kendo.template(that.options.currentPageTemplate);\n                page = that.page();\n                totalPages = that.totalPages();\n                that._refreshHandler = proxy(that.refresh, that);\n                that.dataSource.bind(CHANGE, that._refreshHandler);\n                that.downEvent = kendo.applyEventMap(MOUSEDOWN, kendo.guid());\n                if (options.previousNext) {\n                    if (!that.element.find(FIRST).length) {\n                        that.element.append(icon(FIRST, options.messages.first, 'k-pager-first'));\n                        first(that.element, page, totalPages);\n                    }\n                    if (!that.element.find(PREV).length) {\n                        that.element.append(icon(PREV, options.messages.previous));\n                        prev(that.element, page, totalPages);\n                    }\n                }\n                if (options.numeric) {\n                    that.list = that.element.find('.k-pager-numbers');\n                    if (!that.list.length) {\n                        that.list = $('<ul class=\"k-pager-numbers k-reset\" />').append(that.currentPageTemplate({ text: 0 })).append(that.selectTemplate({ text: 0 })).appendTo(that.element);\n                        that.list.wrap('<div class=\"k-pager-numbers-wrap\"></div>');\n                    }\n                }\n                if (options.input) {\n                    if (!that.element.find('.k-pager-input').length) {\n                        that.element.append('<span class=\"k-pager-input k-label\">' + options.messages.page + '<input class=\"k-textbox\">' + kendo.format(options.messages.of, totalPages) + '</span>');\n                    }\n                    that.element.on(KEYDOWN + NS, '.k-pager-input input', proxy(that._keydown, that));\n                }\n                if (options.previousNext) {\n                    if (!that.element.find(NEXT).length) {\n                        that.element.append(icon(NEXT, options.messages.next));\n                        next(that.element, page, totalPages);\n                    }\n                    if (!that.element.find(LAST).length) {\n                        that.element.append(icon(LAST, options.messages.last, 'k-pager-last'));\n                        last(that.element, page, totalPages);\n                    }\n                }\n                if (options.pageSizes) {\n                    if (!that.element.find('.k-pager-sizes').length) {\n                        var pageSizes = options.pageSizes.length ? options.pageSizes : [\n                            'all',\n                            5,\n                            10,\n                            20\n                        ];\n                        var pageItems = $.map(pageSizes, function (size) {\n                            if (size.toLowerCase && size.toLowerCase() === 'all') {\n                                return '<option value=\\'all\\'>' + options.messages.allPages + '</option>';\n                            }\n                            return '<option>' + size + '</option>';\n                        });\n                        $('<span class=\"k-pager-sizes k-label\"><select/>' + options.messages.itemsPerPage + '</span>').appendTo(that.element).find('select').html(pageItems.join('')).end().appendTo(that.element);\n                    }\n                    that.element.find('.k-pager-sizes select').val(that.pageSize());\n                    if (kendo.ui.DropDownList) {\n                        that.element.find('.k-pager-sizes select').show().kendoDropDownList();\n                    }\n                    that.element.on(CHANGE + NS, '.k-pager-sizes select', proxy(that._change, that));\n                }\n                if (options.refresh) {\n                    if (!that.element.find('.k-pager-refresh').length) {\n                        that.element.append('<a href=\"#\" class=\"k-pager-refresh k-link\" title=\"' + options.messages.refresh + '\" aria-label=\"' + options.messages.refresh + '\"><span class=\"k-icon k-i-reload\"></span></a>');\n                    }\n                    that.element.on(CLICK + NS, '.k-pager-refresh', proxy(that._refreshClick, that));\n                }\n                if (options.info) {\n                    if (!that.element.find('.k-pager-info').length) {\n                        that.element.append('<span class=\"k-pager-info k-label\" />');\n                    }\n                }\n                that.element.on(CLICK + NS, 'a', proxy(that._click, that)).addClass('k-pager-wrap k-widget k-floatwrap');\n                that.element.on(CLICK + NS, '.k-current-page', proxy(that._toggleActive, that));\n                if (options.autoBind) {\n                    that.refresh();\n                }\n                that._resizeHandler = proxy(that.resize, that, true);\n                $(window).on('resize' + NS, that._resizeHandler);\n                sizeClassName = that._getWidthSizeClass(that.element.width());\n                if (sizeClassName) {\n                    that.element.addClass(sizeClassName);\n                }\n                kendo.notify(that);\n            },\n            destroy: function () {\n                var that = this;\n                Widget.fn.destroy.call(that);\n                that.element.off(NS);\n                that.dataSource.unbind(CHANGE, that._refreshHandler);\n                that._refreshHandler = null;\n                $(window).off('resize' + NS, this._resizeHandler);\n                kendo.destroy(that.element);\n                that.element = that.list = null;\n            },\n            events: [CHANGE],\n            options: {\n                name: 'Pager',\n                selectTemplate: '<li><span class=\"k-state-selected\">#=text#</span></li>',\n                currentPageTemplate: '<li class=\"k-current-page\"><span class=\"k-link k-pager-nav\">#=text#</span></li>',\n                linkTemplate: '<li><a tabindex=\"-1\" href=\"\\\\#\" class=\"k-link\" data-#=ns#page=\"#=idx#\" #if (title !== \"\") {# title=\"#=title#\" #}#>#=text#</a></li>',\n                buttonCount: 10,\n                autoBind: true,\n                numeric: true,\n                info: true,\n                input: false,\n                previousNext: true,\n                pageSizes: false,\n                refresh: false,\n                messages: {\n                    allPages: 'All',\n                    display: '{0} - {1} of {2} items',\n                    empty: 'No items to display',\n                    page: 'Page',\n                    of: 'of {0}',\n                    itemsPerPage: 'items per page',\n                    first: 'Go to the first page',\n                    previous: 'Go to the previous page',\n                    next: 'Go to the next page',\n                    last: 'Go to the last page',\n                    refresh: 'Refresh',\n                    morePages: 'More pages'\n                }\n            },\n            setDataSource: function (dataSource) {\n                var that = this;\n                that.dataSource.unbind(CHANGE, that._refreshHandler);\n                that.dataSource = that.options.dataSource = dataSource;\n                dataSource.bind(CHANGE, that._refreshHandler);\n                if (that.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n            _resize: function (size) {\n                if (size.width) {\n                    var sizeClassName = this._getWidthSizeClass(size.width);\n                    var el = this.element;\n                    if (!sizeClassName) {\n                        el.removeClass(SIZE);\n                    } else if (!el.hasClass(sizeClassName)) {\n                        el.removeClass(SIZE);\n                        el.addClass(sizeClassName);\n                    }\n                }\n            },\n            _createDataSource: function (options) {\n                this.dataSource = kendo.data.DataSource.create(options.dataSource);\n            },\n            refresh: function (e) {\n                var that = this, idx, end, start = 1, reminder, page = that.page(), html = '', options = that.options, pageSize = that.pageSize(), collapsedTotal = that._collapsedTotal(), total = that.dataSource.total(), totalPages = that.totalPages(), linkTemplate = that.linkTemplate, buttonCount = options.buttonCount;\n                DOCUMENT_ELEMENT.unbind(that.downEvent, $.proxy(that._hideList, that));\n                if (e && e.action == 'itemchange') {\n                    return;\n                }\n                if (options.numeric) {\n                    if (page > buttonCount) {\n                        reminder = page % buttonCount;\n                        start = reminder === 0 ? page - buttonCount + 1 : page - reminder + 1;\n                    }\n                    end = Math.min(start + buttonCount - 1, totalPages);\n                    if (start > 1) {\n                        html += button(linkTemplate, start - 1, '...', false, options.messages.morePages);\n                    }\n                    for (idx = start; idx <= end; idx++) {\n                        html += button(idx == page ? that.selectTemplate : linkTemplate, idx, idx, true);\n                    }\n                    if (end < totalPages) {\n                        html += button(linkTemplate, idx, '...', false, options.messages.morePages);\n                    }\n                    if (html === '') {\n                        html = that.selectTemplate({ text: 0 });\n                    }\n                    html = this.currentPageTemplate({ text: page }) + html;\n                    that.list.removeClass('k-state-expanded').html(html);\n                }\n                if (options.info) {\n                    if (total > 0) {\n                        html = kendo.format(options.messages.display, that.dataSource.options.endless ? 1 : Math.min((page - 1) * (that.dataSource.pageSize() || 0) + 1, collapsedTotal), Math.min(page * pageSize, collapsedTotal), total);\n                    } else {\n                        html = options.messages.empty;\n                    }\n                    that.element.find('.k-pager-info').html(html);\n                }\n                if (options.input) {\n                    that.element.find('.k-pager-input').html(that.options.messages.page + '<input class=\"k-textbox\" aria-label=\"' + page + '\">' + kendo.format(options.messages.of, totalPages)).find('input').val(page).attr(DISABLED, total < 1).toggleClass('k-state-disabled', total < 1);\n                }\n                if (options.previousNext) {\n                    first(that.element, page, totalPages);\n                    prev(that.element, page, totalPages);\n                    next(that.element, page, totalPages);\n                    last(that.element, page, totalPages);\n                }\n                if (options.pageSizes) {\n                    var hasAll = that.element.find('.k-pager-sizes option[value=\\'all\\']').length > 0;\n                    var selectAll = hasAll && (pageSize === this.dataSource.total() || pageSize == MAX_VALUE);\n                    var text = pageSize;\n                    if (selectAll) {\n                        pageSize = 'all';\n                        text = options.messages.allPages;\n                    }\n                    that.element.find('.k-pager-sizes select').val(pageSize).attr('aria-label', pageSize).filter('[' + kendo.attr('role') + '=dropdownlist]').kendoDropDownList('value', pageSize).kendoDropDownList('text', text);\n                }\n            },\n            _collapsedTotal: function () {\n                return this.dataSource.total();\n            },\n            _keydown: function (e) {\n                if (e.keyCode === kendo.keys.ENTER) {\n                    var input = this.element.find('.k-pager-input').find('input'), page = parseInt(input.val(), 10);\n                    if (isNaN(page) || page < 1 || page > this.totalPages()) {\n                        page = this.page();\n                    }\n                    input.val(page);\n                    this.page(page);\n                }\n            },\n            _refreshClick: function (e) {\n                e.preventDefault();\n                this.dataSource.read();\n            },\n            _change: function (e) {\n                var value = e.currentTarget.value;\n                var pageSize = parseInt(value, 10);\n                var dataSource = this.dataSource;\n                if (!isNaN(pageSize)) {\n                    dataSource.pageSize(pageSize);\n                } else if ((value + '').toLowerCase() == 'all') {\n                    dataSource._pageSize = undefined;\n                    dataSource._take = undefined;\n                    dataSource._skip = 0;\n                    dataSource.fetch();\n                }\n            },\n            _toggleActive: function () {\n                var that = this;\n                if (that.list.hasClass('k-state-expanded')) {\n                    DOCUMENT_ELEMENT.unbind(that.downEvent, $.proxy(that._hideList, that));\n                } else {\n                    DOCUMENT_ELEMENT.bind(that.downEvent, $.proxy(that._hideList, that));\n                }\n                that.list.toggleClass('k-state-expanded');\n            },\n            _hideList: function (e) {\n                var that = this, target = kendo.eventTarget(e);\n                if (!$.contains(that.list[0], target)) {\n                    DOCUMENT_ELEMENT.unbind(that.downEvent, $.proxy(that._hideList, that));\n                    that.list.removeClass('k-state-expanded');\n                }\n            },\n            _click: function (e) {\n                var target = $(e.currentTarget);\n                e.preventDefault();\n                if (!target.is('.k-state-disabled')) {\n                    this.page(target.attr(kendo.attr('page')));\n                }\n            },\n            totalPages: function () {\n                return Math.ceil((this.dataSource.total() || 0) / (this.pageSize() || 1));\n            },\n            pageSize: function () {\n                return this.dataSource.pageSize() || this.dataSource.total();\n            },\n            page: function (page) {\n                if (page !== undefined) {\n                    if (this.trigger('pageChange', { index: page })) {\n                        return;\n                    }\n                    this.dataSource.page(page);\n                    this.trigger(CHANGE, { index: page });\n                } else {\n                    if (this.dataSource.total() > 0) {\n                        return this.dataSource.page();\n                    } else {\n                        return 0;\n                    }\n                }\n            },\n            _getWidthSizeClass: function (width) {\n                var sizes = SIZE.split(' ');\n                if (width <= 480) {\n                    return sizes[2];\n                } else if (width <= 640) {\n                    return sizes[1];\n                } else if (width <= 1024) {\n                    return sizes[0];\n                }\n                return null;\n            }\n        });\n        ui.plugin(Pager);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}